<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.project.mapper.In_ScheduleMapper">
	<select id="selectInscheduleList" resultType="com.itwillbs.project.vo.InScheduleVO">
	SELECT *
	FROM in_schedule_view
	</select>
	
	<!-- 품목조회 -->
	<select id="selectProList1">
	SELECT * FROM product
	WHERE product_name LIKE '%${keyword}%'
	
	</select>
	
	<!-- 출고리스트 상품 갯수 조회 -->
	<select id="selectExtraPdcount" resultType="int">
	SELECT COUNT(IN_SCHEDULE_CD)
	FROM IN_SCHEDULE_PER_PRODUCT
	WHERE IN_SCHEDULE_CD = #{inSchCd}
	</select>
	
	<!--  입고예정 수량 합계 -->
	<select id="selectInSum" resultType="int">
	SELECT SUM(IN_SCHEDULE_QTY)
		FROM IN_SCHEDULE_PER_PRODUCT
		WHERE IN_SCHEDULE_CD = #{schCd}
	</select>
	
	<!-- 입고예정 품목명 -->
	<select id="selectInPdName" resultType="int">
	SELECT MAX(IN_SCHEDULE_PER_CD)
	FROM IN_SCHEDULE_PER_PRODUCT
	WHERE IN_SCHEDULE_CD = #{inSchCd}
	
	</select>
	
	<!-- 외1건 -->
	<select id="selectInSingle" resultType="String">
	SELECT PRODUCT_NAME 
	FROM IN_SCHEDULE_PER_PRODUCT
	WHERE IN_SCHEDULE_PER_CD = #{checkCd}
	
	</select>
	
	<!-- 입고예정 목록 품목명 -->
	<select id="selectInProduct" resultType="String">
	SELECT PRODUCT_NAME
	FROM IN_SCHEDULE_PER_PRODUCT
	WHERE IN_SCHEDULE_PER_CD = #{checkCd}
	</select>
	
	
	
	<!-- 입고물품 등록 -->
	<insert id="insertInschedule">
	INSERT INTO in_schedule
	VALUES(
	#{IN_SCHEDULE_CD}
	,#{IN_TYPE_CD}
	,#{BUSINESS_NO}
	,#{CUST_NAME}
	,#{EMP_NUM}
	,#{EMP_NAME}
	,#{IN_DATE}
	,#{REMARKS}
	,0
	)
	</insert>
	
	<!-- 입고 수정 -->
	<update id="updateInschedule">
	UPDATE in_schedule 
	SET 
		BUSINESS_NO = #{BUSINESS_NO},
		CUST_NAME = #{CUST_NAME},
		EMP_NUM = #{EMP_NUM},
		EMP_NAME = #{EMP_NAME},
		IN_DATE = #{IN_DATE},
		REMARKS = #{REMARKS}
		WHERE IN_SCHEDULE_CD = #{IN_SCHEDULE_CD}
	</update>
	
	<update id="updateInschedulepro">
	UPDATE IN_SCHEDULE_PER_PRODUCT
	SET
		PRODUCT_CD = #{PRODUCT_CD}
		,PRODUCT_NAME = #{PRODUCT_NAME}
		,PRODUCT_SIZE = #{PRODUCT_SIZE}
		,IN_SCHEDULE_QTY = #{IN_SCHEDULE_QTY}
		,IN_QTY = #{IN_QTY}
		,IN_DATE = #{IN_DATE}
		,REMARKS = #{REMARKS}
<!-- 		,STOCK_CD = #{STOCK_CD} -->
		WHERE IN_SCHEDULE_PER_CD = #{IN_SCHEDULE_PER_CD}
	
	</update>
	
	<!-- 입고예정 리스트  -->
	<select id="getInschedulePerList" resultType="com.itwillbs.project.vo.InSchedulePerProductVO">
	SELECT *
		FROM in_schedule_view
	</select>
	
	<select id="selectCode" resultType="integer">
	SELECT 
	IFNULL(MAX(substring(in_schedule_cd,10)),0)
	FROM in_schedule
	</select>
	
	<insert id="insertOutProduct">
	INSERT INTO IN_SCHEDULE_PER_PRODUCT VALUES(
	0,
	#{IN_SCHEDULE_CD}
	,#{PRODUCT_CD}
	,#{PRODUCT_NAME}
	,#{PRODUCT_SIZE}
	,#{IN_SCHEDULE_QTY}
	,#{IN_QTY}
	,#{IN_DATE}
	,#{REMARKS}
	,#{STOCK_CD}
	,0
	)
	</insert>
	<!-- 입고예정 상세정보 -->
	<select id="selectINInfo"
		resultType="com.itwillbs.project.vo.InScheduleVO">
		SELECT *
		FROM in_schedule
		WHERE IN_SCHEDULE_CD = #{IN_SCHEDULE_CD}
	</select>
	<!--  -->
	<select id="selectInProductList"
		resultType="com.itwillbs.project.vo.InSchedulePerProductVO">
		SELECT *
		FROM IN_SCHEDULE_PER_PRODUCT
		WHERE IN_SCHEDULE_CD = #{IN_SCHEDULE_CD}

	</select>

	<!-- 선택 된 항목 불러오기 -->	
	<select id="getInschedulePerInfo" resultType="com.itwillbs.project.vo.InSchedulePerProductVO">
		SELECT *
			FROM in_schedule_view
			WHERE IN_SCHEDULE_PER_CD = #{IN_SCHEDULE_PER_CD}
	</select>
	
	<!-- 모달창 재고 번호 리스트 -->
	<select id="searchStockNum" resultType="com.itwillbs.project.vo.StockVo">
		SELECT *
			FROM stock_view
				WHERE STOCK_CD LIKE '%${keyword}%' || PRODUCT_NAME LIKE '%${keyword}%' || WH_NAME LIKE '%${keyword}%' 
	</select>
	<!-- 모달창 창고 번호 리스트 -->
	<select id="searchWarehouse" resultType="com.itwillbs.project.vo.WareHouseVO">
		SELECT *
			FROM warehouse_view
				WHERE WH_NAME LIKE '%${keyword}%' || WH_AREA LIKE '%${keyword}%' || WH_LOC_IN_AREA LIKE '%${keyword}%' 
	</select>
	
	<!-- 재고 물량 증가 -->
	<update id="updateStockQTY">
		UPDATE stock
				SET STOCK_QTY = STOCK_QTY + #{IN_QTY}
					WHERE STOCK_CD = #{STOCK_CD} AND PRODUCT_CD = #{PRODUCT_CD}
	</update>
	
	<!-- 입고 수량 증가 -->
	<update id="updateInQTY">
		UPDATE in_schedule_view
			SET IN_QTY = IN_QTY + #{IN_QTY}
			WHERE IN_SCHEDULE_PER_CD =#{IN_SCHEDULE_PER_CD};
	</update>
	
	<!-- 입고 진행 여부 -->
	<update id="updateIN_COMPLETE">
		UPDATE in_schedule_view
			SET IN_COMPLETE = 1
			WHERE  IN_SCHEDULE_QTY - IN_QTY = 0;
	</update>
	
	<!-- 입고 진행 여부 -->
	<update id="update_IN_COMPLETE">
		UPDATE in_schedule
			SET IN_COMPLETE = 1
			WHERE IN_SCHEDULE_CD = #{IN_SCHEDULE_CD}
	</update>
	
	<!-- 입고 처리 -->
	<insert id="insertStock">
		<!--재고 번호가 존재 할 떄  -->
		<choose>
			<when test="STOCK_CD != 0">
			UPDATE stock
				SET STOCK_QTY = STOCK_QTY + #{IN_QTY}
					WHERE STOCK_CD = #{STOCK_CD} AND PRODUCT_CD = #{PRODUCT_CD}
			</when>
			<!--재고 번호가 존재 안할 떄  -->
			<otherwise>
			INSERT INTO stock
				VALUES(
				0
				,#{PRODUCT_CD}
				,#{WH_LOC_IN_AREA_CD}
				,#{IN_QTY}
			)
			</otherwise>
		</choose>
	</insert>
	
	<!-- 입고 처리 후 재고이력 테이블에 등록 -->
	<insert id="insertHistory">
		INSERT INTO stock_history
			VALUES (
			#{stock_cd}
			,0
			,#{product_cd}
			,""
			,""
			,#{insert_qty}
			,#{sId}
			,now()
			,"입고 처리"
			)
			
	</insert>
	
	
	<!-- 종결버튼 -->
	<update id="updatecomplete">
	UPDATE IN_SCHEDULE
			SET 
				IN_COMPLETE = #{IN_COMPLETE}
			WHERE IN_SCHEDULE_CD = #{IN_SCHEDULE_CD}
	</update>
	
	<select id="selectInProdList" resultType="com.itwillbs.project.vo.InSchedulePerProductVO">
	SELECT * FROM InSchedule_Per_Product
	WHERE IN_SCHEDULE_CD = #{IN_SCHEDULE_CD}
	</select>
	
	<!-- 재고 번호 가져오기 -->
	<select id="getStock_cd" resultType="int">
		SELECT stock_cd
			FROM in_schedule_per_product
			WHERE IN_SCHEDULE_PER_CD = #{in_SCHEDULE_CD} 	
	</select>
</mapper>