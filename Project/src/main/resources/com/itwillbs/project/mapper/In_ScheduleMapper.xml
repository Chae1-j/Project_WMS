<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.project.mapper.In_ScheduleMapper">
	<select id="selectInscheduleList" resultType="com.itwillbs.project.vo.InScheduleVO">
	SELECT *
	FROM in_schedule_view
	</select>
	<!-- 입고물품 등록 -->
	<insert id="insertInschedule">
	INSERT INTO in_schedule
	VALUES(
	#{IN_SCHEDULE_CD}
	,#{IN_TYPE_CD}
	,#{BUSINESS_NO}
	,#{CUST_NAME}
	,#{EMP_NUM}
	,#{EMP_NAME}
	,#{IN_DATE}
	,#{REMARKS}
	,0
	)
	</insert>
	
	<!-- 입고 수정 -->
	<update id="updateInschedule">
	UPDATE in_schedule 
	SET 
	IN_SCHEDULE_CD = #{IN_SCHEDULE_CD},
	IN_TYPE_CD=#{IN_TYPE_CD},
	<!-- 보낸곳명 -->
	EMP_NUM=#{EMP_NUM},
	PRODUCT_NAME=#{PRODUCT_NAME},
	IN_DATE=#{IN_DATE},
	WHERE
	IN_SCHEDULE_CD = #{IN_SCHEDULE_CD}
	</update>
	
	<!-- 입고예정 리스트  -->
	<select id="getInschedulePerList" resultType="com.itwillbs.project.vo.InSchedulePerProductVO">
	SELECT *
		FROM in_schedule_per_product
	</select>
	
	<select id="selectCode" resultType="integer">
	SELECT 
	IFNULL(MAX(substring(in_schedule_cd,10)),0)
	FROM in_schedule
	</select>
	
	<insert id="insertOutProduct">
	INSERT INTO IN_SCHEDULE_PER_PRODUCT VALUES(
	0,
	#{IN_SCHEDULE_CD}
	,#{PRODUCT_CD}
	,#{PRODUCT_NAME}
	,#{PRODUCT_SIZE}
	,#{IN_SCHEDULE_QTY}
	,#{IN_QTY}
	,#{IN_DATE}
	,#{REMARKS}
	,#{STOCK_CD}
	,0
	)
	</insert>
	<!-- 입고예정 상세정보 -->
	<select id="selectINInfo"
		resultType="com.itwillbs.project.vo.InScheduleVO">
		SELECT *
		FROM in_schedule
		WHERE IN_SCHEDULE_CD = #{IN_SCHEDULE_CD}
	</select>

	<select id="selectInProductList"
		resultType="com.itwillbs.project.vo.InSchedulePerProductVO">
		SELECT *
		FROM IN_SCHEDULE_PER_PRODUCT
		WHERE IN_SCHEDULE_CD = #{IN_SCHEDULE_CD}

	</select>
	
	
	
	
	<select id="getInschedulePerInfo" resultType="com.itwillbs.project.vo.InSchedulePerProductVO">
		SELECT *
			FROM in_schedule_per_product
			WHERE IN_SCHEDULE_PER_CD = #{IN_SCHEDULE_PER_CD}
	</select>

	<select id="searchStockNum" resultType="com.itwillbs.project.vo.StockVo">
		SELECT *
			FROM stock_view
				WHERE STOCK_CD LIKE '%${keyword}%' || PRODUCT_NAME LIKE '%${keyword}%' || WH_NAME LIKE '%${keyword}%' 
	</select>
	
	<!-- 종결버튼 -->
	<update id="updatecomplete">
	UPDATE IN_SCHEDULE
			SET 
				IN_COMPLETE = #{IN_COMPLETE}
			WHERE IN_SCHEDULE_CD = #{IN_SCHEDULE_CD}
	</update>
</mapper>